<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">


	<!-- /login에 스프링 시큐리티 적용, input name='email', input name='password'인 form에 적용 -->
 	<http auto-config="true" use-expressions="true">
		<form-login login-page="/login" login-processing-url="/j_spring_security_check"
						authentication-failure-url="/login?fail=true" 
						username-parameter="id" password-parameter="password" />
		
		<logout logout-success-url="/" logout-url="/logout"
					invalidate-session="true" delete-cookies="JSESSIONID" />
		<csrf disabled="true" />
		
	
<!--        return boolean -->
	 	<intercept-url pattern="/" access="hasAnyRole('ROLE_USER', 'ROLE_MANAGER')"/>
	 	<intercept-url pattern="/restView/*" access="hasAnyRole('ROLE_USER', 'ROLE_MANAGER')"/>
       <intercept-url pattern="/**" access="permitAll()"/>
      
       
   </http>    
    
    <!-- 스프링 시큐리티에서 인증 및 권한을, 커스터마이징한 CustomizeUserDetailService에서 처리할 수 있도록 의존성을 주입 -->
    <context:component-scan base-package="com.nbp.myapp"/>
    <beans:bean id="customizeUserDetailsService" class="com.nbp.myapp.security.CustomizeUserDetailsService"/>
    
    <!-- 회원 인증 (유효한 회원인지 확인) -->
    <authentication-manager>
    	<authentication-provider user-service-ref="customizeUserDetailsService">
    		<!-- 로그인시 Password를 bcrypt 방식으로 암호화가 되었는지 확인 -->

    	</authentication-provider>
    </authentication-manager>

</beans:beans>